letter_values = {    'a': 1,    'b': 2,    'c': 3,    'd': 4,    'e': 5,    'f': 6,    'g': 7,    'h': 8,    'i': 9,    'j': 10,    'k': 11,    'l': 12,    'm': 13,    'n': 14,    'o': 15,    'p': 16,    'q': 17,    'r': 18,    's': 19,    't': 20,    'u': 21,    'v': 22,    'w': 23,    'x': 24,    'y': 25,    'z': 26,    'A': 27,    'B': 28,    'C': 29,    'D': 30,    'E': 31,    'F': 32,    'G': 33,    'H': 34,    'I': 35,    'J': 36,    'K': 37,    'L': 38,    'M': 39,    'N': 40,    'O': 41,    'P': 42,    'Q': 43,    'R': 44,    'S': 45,    'T': 46,    'U': 47,    'V': 48,    'W': 49,    'X': 50,    'Y': 51,    'Z': 52}def read_file_to_array(filename):    rucksacks = []    with open(filename) as file:        for line in file:            rucksacks.append(line.rstrip())    return rucksacksdef get_items_that_appear_in_both_compartments(items_string):    items = list(items_string)    common = []    middle = int((len(items)) / 2)    c1 = items[:middle]    c2 = items[middle:]    for item in c1:        if item in c2 and item not in common:            common.append(item)    return commondef get_priority_sum(common_items):    total = 0    for item in common_items:        total += letter_values[item]    return totaldef get_sum_of_common_type_priorities(rucksacks_file):    rucksacks = read_file_to_array(rucksacks_file)    total = 0    for r in rucksacks:        common_items = get_items_that_appear_in_both_compartments(r)        p = get_priority_sum(common_items)        total += p    return totaldef get_common_item(c1, c2, c3):    for item in c1:        if item in c2 and item in c3:            return itemdef get_badge_priority_sum(rucksacks_file):    rucksacks = read_file_to_array(rucksacks_file)    total = 0    for i in range(0, len(rucksacks) - 2, 3):        e1 = rucksacks[i]        e2 = rucksacks[i + 1]        e3 = rucksacks[i + 2]        common = get_common_item(e1, e2, e3)        total += letter_values[common]    return totalif __name__ == '__main__':    filename = "input.txt"    sum_of_priorities = get_sum_of_common_type_priorities(filename)    print(f"Sum of priorities is {sum_of_priorities}")    sum_of_badge_types = get_badge_priority_sum(filename)    print(f"Sum of badge types is {sum_of_badge_types}")